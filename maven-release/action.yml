# action.yml
name: 'Maven Release'
description: 'Release your java application and publish artifacts to GitHub Packages'
branding:
  color: blue
  icon: unlock
inputs:
  release-branch-name:
    description: 'Filter the branch to execute the release on'
    required: false

  maven-local-repo-path:
    description: 'The maven local repository path'
    required: false
    default: '$M2_HOME/repository'

  maven-repo-server-id:
    description: 'Maven server repository id to push the artefacts to'
    required: true
  maven-repo-server-username:
    description: 'Maven server repository username'
    required: true
  maven-repo-server-password:
    description: 'Maven server repository password'
    required: true

  git-release-bot-name:
    description: 'The git user name for commiting the release'
    required: false
    default: 'github-actions[bot]'
  git-release-bot-email:
    description: 'The git user email for commiting the release'
    required: false
    default: '41898282+github-actions[bot]@users.noreply.github.com'

  github-server-id:
    description: 'maven settings.xml server id for auth'
    default: 'github'
  github-server-actor:
    description: |
      Github access user.
      Maybe default to github.actor
    required: true
  github-server-token:
    description: |
      Github access token.
      Maybe default to github.token
      https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
    required: true

  maven-next-release-version:
    description: 'The release version string to assign to the next maven release build products.'
    required: false
    default: ''

  maven-next-snapshot-version:
    description: 'The snapshot version string to return the main branch to after performing a release.'
    required: false
    default: ''

  maven-release-args:
    description: 'Inject arguments in mvn docker build and push.'
    required: false
    default: ''

  maven-release-publish:
    description: 'Publish the released artifact to GitHub Packages'
    required: false

  maven-snapshot-publish:
    description: 'Publish the new post release snapshot artifact to GitHub Packages'
    required: false

  maven-publish-args:
    description: 'Inject arguments in mvn publish command, ex: -Dskip.unit.tests=true - to skip the tests'
    required: false

outputs:
  maven-release-version:
    description: "The release version that was built and tagged"
    value: ${{ steps.exec-maven-release.outputs.maven-release-version }}
  maven-snapshot-version:
    description: "The latest version for development after release"
    value: ${{ steps.exec-maven-release.outputs.maven-snapshot-version }}
  maven-release-result-code:
    description: "The maven release exit code"
    value: ${{ steps.exec-maven-release.outputs.execution-result-code }}

runs:
  using: "composite"
  steps:
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 8
        mvn-toolchain-vendor: Eclipse Temurin
        cache: maven
        settings-path: ${{ github.workspace }} # directory for the settings.xml file
        server-id: ${{ inputs.maven-repo-server-id }}
        server-username: 'MAVEN_REPO_SERVER_USERNAME'
        server-password: 'MAVEN_REPO_SERVER_PASSWORD'

    - name: Show config
      shell: bash
      run: |
        echo "--- SHOWING ENVIRONMENT ---"
        env | sort
        echo "--- SHOWING SETTINGS : ${GITHUB_WORKSPACE}/settings.xml  ---"
        cat ${GITHUB_WORKSPACE}/settings.xml
        echo "--- DONE ---"

    - uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.9.9

    - name: Set up Maven settings.xml
      uses: s4u/maven-settings-action@v3.0.0
      with:
        override: 'true'
        path: ${{ github.workspace }}/settings.xml
        githubServer: false
        servers: |
          [{
            "id": "${{ inputs.github-server-id }}",
            "username": "${env.GITHUB_SERVER_ACTOR}",
            "password": "${env.GITHUB_SERVER_TOKEN}"
          },{
            "id": "${{ inputs.maven-repo-server-id }}",
            "username": "${env.MAVEN_REPO_SERVER_USERNAME}",
            "password": "${env.MAVEN_REPO_SERVER_PASSWORD}"
          }]

    - name: Show config
      shell: bash
      run: |
        echo "--- SHOWING ENVIRONMENT ---"
        env | sort
        echo "--- SHOWING SETTINGS : ${GITHUB_WORKSPACE}/settings.xml  ---"
        cat ${GITHUB_WORKSPACE}/settings.xml
        echo "--- DONE ---"

    - name: Configure Git
      shell: bash
      env:
        GIT_RELEASE_BOT_NAME: ${{ inputs.git-release-bot-name }}
        GIT_RELEASE_BOT_EMAIL: ${{ inputs.git-release-bot-email }}
      run: |
        [ -z "$(git config --get user.name)" ] && git config --local user.name "${GIT_RELEASE_BOT_NAME}"
        [ -z "$(git config --get user.email)" ] && git config  --local user.email "${GIT_RELEASE_BOT_EMAIL}"

    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Release with Maven
      id: exec-maven-release
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
        GITHUB_SERVER_ID: ${{ inputs.github-server-id }}
        GITHUB_SERVER_ACTOR: ${{ inputs.github-server-actor }}
        GITHUB_SERVER_TOKEN: ${{ inputs.github-server-token }}
        MAVEN_USER_SETTINGS_PATH: ${{ github.workspace }}/settings.xml
        MAVEN_REPO_SERVER_ID: ${{ inputs.maven-repo-server-id }}
        MAVEN_REPO_SERVER_USERNAME: ${{ inputs.maven-repo-server-username }}
        MAVEN_REPO_SERVER_PASSWORD: ${{ inputs.maven-repo-server-password }}
        MAVEN_LOCAL_REPO_PATH: ${{ inputs.maven-local-repo-path }}
        MAVEN_NEXT_RELEASE_VER: ${{ github.event.inputs.next-release-version }}
        MAVEN_NEXT_SNAPSHOT_VER: ${{ github.event.inputs.next-snapshot-version }}
      run: |
        ls -alh ${GITHUB_WORKSPACE}
        echo PWD="$(pwd)"
        $GITHUB_ACTION_PATH/mvn-release.sh release

