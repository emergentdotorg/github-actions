name: Reusable Maven Release

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      version:
        description: "The new release version"
        value: ${{ jobs.release.outputs.version }}
    inputs:
      java-version:
        description: 'JDK version to build with'
        type: string
        required: true
      dry-run:
        description: 'Skip actually committing or deploying'
        type: boolean
        required: false
        default: true


jobs:
  release:
    if: ${{ ! inputs.dry-run }}
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      output1: ${{ steps.copy-version-info.outputs.version }}
    env:
      DEPLOY_USERNAME: ${{ secrets.maven_central_actor }}
      DEPLOY_PASSWORD: ${{ secrets.maven_central_token }}
      GPG_PASSPHRASE: ${{ secrets.maven_gpg_passphrase }}
    steps:
      - uses: actions/checkout@v4

      - name: 'Set up JDK'
        uses: actions/setup-java@v4
        with:
          java-version: |
            17
            11
            8
            ${{ inputs.java-version }}
          distribution: 'temurin'
          # settings-path: ${{ github.workspace }}
          server-id: central
          server-username: DEPLOY_USERNAME
          server-password: DEPLOY_PASSWORD
          gpg-passphrase: GPG_PASSPHRASE
          gpg-private-key: ${{ secrets.maven_gpg_private_key }}

      - name: 'Verify Java environment variables'
        shell: bash
        run: |
          java -version
          echo "JAVA_HOME: $JAVA_HOME"
          echo "JAVA_HOME_8_X64: $JAVA_HOME_8_X64"
          echo "JAVA_HOME_11_X64: $JAVA_HOME_11_X64"
          echo "JAVA_HOME_17_X64: $JAVA_HOME_17_X64"

      - name: 'Configure Git User'
        shell: bash
        # language="shell script"
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.9

      - name: Copy Version Info
        id: copy-version-info
        shell: bash
        # language="shell script"
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Perform Maven Release
        shell: bash
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        # language="shell script"
        run: |
          declare -a mvnArgsArr=( "-B" )
          mvnArgsArr+=( "--no-transfer-progress" )
          mvnArgsArr+=( "-DpushChanges=false" )
          mvnArgsArr+=( "-DlocalCheckout=true" )
          mvnArgsArr+=( "-DscmCommentPrefix=[GitHub] " )
          mvnArgsArr+=( "-DtagNameFormat=@{project.version}" )
          mvnArgsArr+=( "-Darguments=--no-transfer-progress" )
          mvnArgsArr+=( "-P" "emergent-release" )
          mvn "${mvnArgsArr[@]}" release:prepare release:perform

      - name: Commit Maven Release
        if: ${{ success() }}
        shell: bash
        # language="shell script"
        run: git push --follow-tags --atomic

  dryrun:
    if: ${{ inputs.dry-run }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'Set up JDK'
        uses: actions/setup-java@v4
        with:
          java-version: |
            17
            11
            8
            ${{ inputs.java-version }}
          distribution: 'temurin'
      - uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.9
      - name: Test Maven Release
        id: set-perform-goals
        shell: bash
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        # language="shell script"
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com'
          mvn -B \
            -DpushChanges=false \
            -DlocalCheckout=true \
            -Darguments="-DaltDeploymentRepository=dist::file://${GITHUB_WORKSPACE}/testrepo" \
            release:prepare release:perform
