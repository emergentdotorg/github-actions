name: 'Java Maven Environment Setup'
description: 'Setup Java Environment'
outputs:
  user-settings:
    description: 'Path to user settings file'
    value: ${{ steps.resolve_paths.outputs.settings-path }}/settings.xml
  user-toolchains:
    description: 'Path to user toolchains file'
    value: ${{ steps.resolve_paths.outputs.settings-path }}/toolchains.xml
  global-settings:
    description: 'Path to global settings file'
    value: ${{ steps.resolve_paths.outputs.settings-path }}/settings-global.xml
inputs:
  deploy-server:
    description: >
      ID of the distributionManagement repository in the pom.xml file. Default is `github`
    required: false
    default: 'github'
  deploy-username-env:
    description: >
      Environment variable name for the username for authentication
      to the Apache Maven repository. Default is $GITHUB_ACTOR'
    required: false
    default: 'GITHUB_ACTOR'
  deploy-password-env:
    description: >
      Environment variable name for password or token for
      authentication to the Apache Maven repository. Default is $GITHUB_TOKEN'
    required: false
    default: 'GITHUB_TOKEN'
  github-username-env:
    description: >
      Environment variable name for the username for authentication
      to the source repository. Default is $GITHUB_ACTOR'
    required: false
    default: 'GITHUB_ACTOR'
  github-password-env:
    description: >
      Environment variable name for password or token for
      authentication to the source repository. Default is $GITHUB_TOKEN'
    required: false
    default: 'GITHUB_TOKEN'
  gpg-passphrase-env:
    description: >
      Environment variable name for the GPG private key passphrase. 
      Default is $GPG_PASSPHRASE.
    required: false
    default: 'GPG_PASSPHRASE'
  gpg-private-key:
    description: 'GPG private key to import. Default is empty string.'
    required: false
    default: ''
  github-token:
    description: 'GitHub token'
    required: true
    default: ${{ github.token }}
  maven-version:
    description: 'Maven version'
    required: true
    default: '3.9.9'
  settings-dir:
    description: 'Directory which will hold the generated settings.xml'
    required: false
    default: ''

runs:
  using: "composite"
  steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ inputs.github-token }}

    - name: Setup Git Config
      shell: bash
      # language="shell script"
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        printf '%s\n' \
          '/github-actions/' \
          '/gha-creds*.json' \
          '/settings.xml' \
          '/settings-global.xml' \
          '/toolchains.xml' \
          >> ".git/info/exclude"

    - name: Install Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: ${{ inputs.maven-version }}

    - name: Resolve Paths
      id: resolve_paths
      shell: bash
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
        SETTINGS_DIR: ${{ inputs.settings-dir != '' && inputs.settings-dir || '~/.m2' }}
      # language="shell script"
      run: |
        RESOLVED_DIR="${SETTINGS_DIR/#~/$HOME}"
        mkdir -p "${RESOLVED_DIR}"
        printf '%s\n' \
          "settings-path=${RESOLVED_DIR}" \
          "user-settings=${RESOLVED_DIR}/settings.xml" \
          "user-toolchains=${RESOLVED_DIR}/toolchains.xml" \
          "global-settings=${RESOLVED_DIR}/settings-global.xml" \
          >> $GITHUB_OUTPUT

    - name: 'Setup Java'
      uses: actions/setup-java@v4
      with:
        settings-path: ${{ steps.resolve_paths.outputs.settings-path }}
        server-id: ${{ inputs.deploy-server }}
        server-username: ${{ inputs.deploy-username-env }}
        server-password: ${{ inputs.deploy-password-env }}
        distribution: 'temurin'
        java-version: |
          8
          11
          17
        mvn-toolchain-id: |
          temurin_8
          temurin_11
          temurin_17

    - uses: s4u/maven-settings-action@v3.1.0
      if: ${{ inputs.deploy-server != 'github' && success() }}
      with:
        path: ${{ steps.resolve_paths.outputs.global-settings }}
        githubServer: 'false'
        servers: >
          [{
            "id": "github",
            "username": "${env.${{ inputs.github-username-env }}}",
            "password": "${env.${{ inputs.github-password-env }}}"
          }]

    - name: 'Verify Java and Maven'
      shell: bash
      env:
        USER_SETTINGS: ${{ steps.resolve_paths.outputs.user-settings }}
        USER_TOOLCHAINS: ${{ steps.resolve_paths.outputs.user-toolchains }}
        GLOBAL_SETTINGS: ${{ steps.resolve_paths.outputs.global-settings }}
      # language="shell script"
      run: |
        java -version
        echo "JAVA_HOME: $JAVA_HOME"
        echo "JAVA_HOME_8_X64: $JAVA_HOME_8_X64"
        echo "JAVA_HOME_11_X64: $JAVA_HOME_11_X64"
        echo "JAVA_HOME_17_X64: $JAVA_HOME_17_X64"
        mvn -version
        catIfExists() {
          if [ -f "$1" ]; then
            cat "$1"
          else
            echo "WARNING: File $1 does not exist"
          fi
        }
        catIfExists "${USER_SETTINGS}"
        catIfExists "${GLOBAL_SETTINGS}"
        catIfExists "${USER_TOOLCHAINS}"
        catIfExists ${{ github.workspace }}/.git/config
