# action.yml
name: 'Maven Release'
description: 'Release your java application and publish artifacts to GitHub Packages'
branding:
  color: blue
  icon: unlock
inputs:
  maven-repo-server-id:
    description: 'Maven server repository id to push the artefacts to'
    required: true
  maven-repo-server-username:
    description: 'Maven server repository username'
    required: true
  maven-repo-server-password:
    description: 'Maven server repository password'
    required: true

  git-release-bot-name:
    description: 'The git user name for commiting the release'
    required: false
    default: 'github-actions[bot]'
  git-release-bot-email:
    description: 'The git user email for commiting the release'
    required: false
    default: '41898282+github-actions[bot]@users.noreply.github.com'

  github-server-id:
    description: 'maven settings.xml server id for auth'
    default: 'github'
  github-server-actor:
    description: |
      Github access user.
      Maybe default to github.actor
    required: true
  github-server-token:
    description: |
      Github access token.
      Maybe default to github.token
      https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
    required: true

  maven-release-plugin-version:
    description: 'Override the maven release plugin version'
    required: false
    default: ''

  maven-next-release-version:
    description: 'The release version string to assign to the next maven release build products.'
    required: false
    default: ''

  maven-next-snapshot-version:
    description: 'The snapshot version string to return the main branch to after performing a release.'
    required: false
    default: ''

  maven-scm-comment-prefix:
    description: 'The maven release scmCommentPrefix property value'
    default: '[GitHub] '

  maven-tag-name-format:
    description: 'The maven release tagNameFormat property value'
    default: ''

  maven-local-repo-path:
    description: 'The maven local repository path override'
    required: false
    default: ''

  maven-additional-arglist:
    description: 'Additional maven arguments delimited by newline to preserve spaces'
    required: false
    default: ''

outputs:
  maven-scm-tag:
    description: "The release tag"
    value: ${{ steps.exec-maven-release.outputs.maven-scm-tag }}
  maven-release-version:
    description: "The release version that was built and tagged"
    value: ${{ steps.exec-maven-release.outputs.maven-release-version }}
  maven-development-version:
    description: "The latest version for development after release"
    value: ${{ steps.exec-maven-release.outputs.maven-development-version }}

runs:
  using: "composite"
  steps:

    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 8
        cache: maven
        settings-path: ${{ github.workspace }}
        server-id: ${{ inputs.maven-repo-server-id }}
        server-username: 'MAVEN_REPO_SERVER_USERNAME'
        server-password: 'MAVEN_REPO_SERVER_PASSWORD'

    - uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.9.9

    - uses: s4u/maven-settings-action@v3.0.0
      with:
        path: ${{ github.workspace }}/settings.xml
        githubServer: false
        servers: |
          [{
            "id": "${{ inputs.github-server-id }}",
            "username": "${env.GITHUB_SERVER_ACTOR}",
            "password": "${env.GITHUB_SERVER_TOKEN}"
          },{
            "id": "${{ inputs.maven-repo-server-id }}",
            "username": "${env.MAVEN_REPO_SERVER_USERNAME}",
            "password": "${env.MAVEN_REPO_SERVER_PASSWORD}"
          }]

    - uses: actions/github-script@v7
      id: set-combined-opts
      with:
        result-encoding: string
        script: |
          let inputsObj = {
            "releaseVersion": "${{ inputs.maven-next-release-version }}",
            "developmentVersion": "${{ inputs.maven-next-snapshot-version}}",
            "tagNameFormat": "${{ inputs.maven-tag-name-format }}",
            "scmCommentPrefix": "${{ inputs.maven-scm-comment-prefix }}",
            "maven.repo.local": "${{ inputs.maven-local-repo-path }}"
          };
          let outputArr = [];
          for ([key, val] of Object.entries(inputsObj)) {
            if (val) {
              outputArr.push( `-D${key}=${val}` );
            }
          }
          return outputArr.join("\n");

    - shell: bash
      id: exec-maven-release
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
        GITHUB_SERVER_ID: ${{ inputs.github-server-id }}
        GITHUB_SERVER_ACTOR: ${{ inputs.github-server-actor }}
        GITHUB_SERVER_TOKEN: ${{ inputs.github-server-token }}
        MAVEN_REPO_SERVER_ID: ${{ inputs.maven-repo-server-id }}
        MAVEN_REPO_SERVER_USERNAME: ${{ inputs.maven-repo-server-username }}
        MAVEN_REPO_SERVER_PASSWORD: ${{ inputs.maven-repo-server-password }}
        MAVEN_RELEASE_PLUGIN_VERSION: ${{ inputs.maven-release-plugin-version }}
      run: |
        source $GITHUB_ACTION_PATH/utils-include-env.sh
        
        [ -z "$(git config --get user.name)" ] && git config --local user.name "${{ inputs.git-release-bot-name }}"
        [ -z "$(git config --get user.email)" ] && git config  --local user.email "${{ inputs.git-release-bot-email }}"

        readarray -t mvnArgsArr <<<"$(
          echo "${{steps.set-combined-opts.outputs.result}}" 
          echo "${{inputs.maven-additional-arglist}}" 
        )"
        mvnArgsArr+=( "-Dresume=false" )
        mvnArgsArr+=( "-DlocalCheckout=true" )        
        mvnArgsArr+=( "-s" "${GITHUB_WORKSPACE}/settings.xml" )

        execMvn "${mvnArgsArr[@]}" release:prepare
        readReleaseProperties
        execMvn "${mvnArgsArr[@]}" release:perform

        # if pushChanges=false we'd need the next line uncommented    
        #git push --follow-tags --atomic || failOnError
  
        echo "maven-scm-tag=${MAVEN_SCM_TAG:?}" >> ${GITHUB_OUTPUT}
        echo "maven-release-version=${MAVEN_RELEASE_VERSION:?}" >> ${GITHUB_OUTPUT}
        echo "maven-development-version=${MAVEN_DEVELOPMENT_VERSION:?}" >> ${GITHUB_OUTPUT}

