name: Reusable Maven Release

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      version:
        description: "The new release version"
        value: ${{ jobs.release.outputs.version }}
    inputs:
      java-version:
        description: 'JDK version to build with'
        type: string
        required: true
      deploy-server:
        description: 'Maven dist mgmt server-id'
        type: string
        required: true
        default: 'emergent-nexus'
      maven-profiles:
        description: 'Maven profiles to activate, comma-delimited'
        type: string
        required: true
        default: 'emergent-release'
      push-changes:
        description: 'Push commits and tags to the source repository'
        type: boolean
        required: false
        default: true
      dry-run:
        description: 'Skip actually committing or deploying'
        type: boolean
        required: false
        default: false


jobs:
  release:
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      version: ${{ steps.maven_release.outputs.version }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve Vars
        id: resolve_vars
        shell: bash
        env:
          DEPLOY_SERVER: ${{ inputs.deploy-server }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          DEPLOY_CENTRAL_ACTOR: ${{ secrets.deploy_central_actor }}
          DEPLOY_CENTRAL_TOKEN: ${{ secrets.deploy_central_token }}
          DEPLOY_GITHUB_ACTOR: 'emergentbot'
          DEPLOY_GITHUB_TOKEN: ${{ secrets.emergentbot_deploy_token }}
          DEPLOY_NEXUS_ACTOR: ${{ secrets.deploy_nexus_actor }}
          DEPLOY_NEXUS_TOKEN: ${{ secrets.deploy_nexus_token }}
        # language="shell script"
        run: |
          case "${DEPLOY_SERVER}" in
            central)
              DEPLOY_ACTOR="${DEPLOY_CENTRAL_ACTOR}"
              DEPLOY_TOKEN="${DEPLOY_CENTRAL_TOKEN}"
              ;;
            github)
              DEPLOY_ACTOR="${{ github.actor }}"
              DEPLOY_TOKEN="${{ github.token }}"
              DEPLOY_ALT_REPO="github::https://maven.pkg.github.com/emergentdotorg/${GITHUB_REPOSITORY}"
              ;;
            emergent-github)
              DEPLOY_ACTOR="${DEPLOY_GITHUB_ACTOR}"
              DEPLOY_TOKEN="${DEPLOY_GITHUB_TOKEN}"
              DEPLOY_ALT_REPO="github::https://maven.pkg.github.com/emergentdotorg/maven-repository"
              ;;
            emergent-nexus)
              DEPLOY_ACTOR="${DEPLOY_NEXUS_ACTOR}"
              DEPLOY_TOKEN="${DEPLOY_NEXUS_TOKEN}"
              DEPLOY_ALT_RELEASE_REPO="nexus::https://nexus.emergent.org/repository/maven-releases/"
              DEPLOY_ALT_SNAPSHOT_REPO="nexus::https://nexus.emergent.org/repository/maven-snapshots/"
              ;;
            *)
              ;;
          esac
          printf '%s\n' \
            "deploy-actor=${DEPLOY_ACTOR}" \
            "deploy-token=${DEPLOY_TOKEN}" \
            "deploy-alt-repo=${DEPLOY_ALT_REPO}" \
            "deploy-alt-release-repo=${DEPLOY_ALT_RELEASE_REPO}" \
            "deploy-alt-snapshot-repo=${DEPLOY_ALT_SNAPSHOT_REPO}" \
            "version=${VERSION}" \
            >> $GITHUB_OUTPUT


      - name: Maven Release
        id: maven_release
        uses: emergentdotorg/github-actions/maven-release@main
        with:
          java-version: ${{ inputs.java-version }}
          maven-profiles: ${{ inputs.maven-profiles }}
          deploy-server: ${{ inputs.deploy-server }}
          deploy-actor: ${{ steps.resolve_vars.outputs.deploy-actor }}
          deploy-token: ${{ steps.resolve_vars.outputs.deploy-token }}
          deploy-alt-repo: ${{ steps.resolve_vars.outputs.deploy-alt-repo }}
          deploy-alt-release-repo: ${{ steps.resolve_vars.outputs.deploy-alt-release-repo }}
          deploy-alt-snapshot-repo: ${{ steps.resolve_vars.outputs.deploy-alt-snapshot-repo }}
          gpg-passphrase: ${{ secrets.maven_gpg_passphrase }}
          gpg-private-key: ${{ secrets.maven_gpg_private_key }}
          push-changes: ${{ inputs.push-changes }}
          dry-run: ${{ inputs.dry-run }}

