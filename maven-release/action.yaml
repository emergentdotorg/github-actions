name: 'Maven Release'
description: 'Deploy using maven as build tool'
outputs:
  version:
    description: "The released version"
    value: ${{ steps.resolve_values.outputs.version-release }}
inputs:
  java-version:
    description: 'JDK version'
    required: true
  deploy-server:
    description: 'Dist server id, e.g. central, github, nexus'
    required: true
  deploy-actor:
    description: 'user to authenticate at the artifact repository'
    required: true
  deploy-token:
    description: 'password to authenticate at the artifact repository'
    required: true
  gpg-private-key:
    description: 'private key for artifact signing'
    required: true
  gpg-passphrase:
    description: 'pass phrase for te gpg signing key'
    required: true
  maven-profiles:
    description: 'Maven profiles to activate, comma-delimited'
    default: ''
  maven-version:
    description: 'Maven version'
    default: '3.9.9'
  github-actor:
    description: "Required for permission to tag the repo."
    default: ${{ github.actor }}
  github-token:
    description: "Required for permission to tag the repo."
    default: ${{ github.token }}
  tag-prefix:
    description: 'Tag prefix'
    default: 'v'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      id: checkout_primary
      with:
        fetch-tags: true
        token: ${{ inputs.github-token }}

    - uses: emergentdotorg/github-actions/git-init-user@main

    - shell: bash
      id: resolve_paths
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
        SETTINGS_DIR: '~/.m2'
      # language="shell script"
      run: |
        RESOLVED_DIR="${SETTINGS_DIR/#~/$HOME}"
        mkdir -p "${RESOLVED_DIR}"
        printf '%s\n' \
          "MAVEN_USER_SETTINGS=${GITHUB_ACTION_PATH}/settings.xml" \
          >> $GITHUB_ENV
        printf '%s\n' \
          "maven_user_settings=${GITHUB_ACTION_PATH}/settings.xml" \
          >> $GITHUB_OUTPUT

    - shell: bash
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
      # language="shell script"
      run: |
        catIfExists() {
          if [ -f "$1" ]; then
            echo "File: $1"
            cat "$1"
            echo "-----"
          else
            echo "WARNING: File $1 does not exist"
          fi
        }
        catIfExists "${MAVEN_USER_SETTINGS}"

    - uses: actions/setup-java@v4
      with:
        #cache: maven
        distribution: 'temurin'
        java-version: ${{ inputs.java-version }}
        server-id: ${{ inputs.deploy-server }}
        server-username: DEPLOY_ACTOR
        server-password: DEPLOY_TOKEN

    - uses: stCarolas/setup-maven@v5
      with:
        maven-version: ${{ inputs.maven-version }}

    - shell: bash
      id: resolve_values
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
        MAVEN_PROFILES: ${{ inputs.maven-profiles }}
      # language="shell script"
      run: |
        # Convert spaces to commas in the profiles string
        declare -a _profiles=( ${MAVEN_PROFILES} )
        PROFILES=$(IFS=, ; echo "${_profiles[*]}")
        # Determine version
        VERSION="$(mvn -e help:evaluate -q -DforceStdout -Dexpression=project.version)"
        VERSION="${VERSION%-SNAPSHOT}"
        COMMITS="$(mvn -e help:evaluate -q -DforceStdout -Dexpression=git-versioner.commitNumber)"
        echo "PROFILES=${PROFILES}"
        echo "VERSION_COMMITS=${COMMITS}"
        echo "VERSION_RELEASE=${VERSION}"
        printf '%s\n' \
          "profiles=${PROFILES}" \
          "version-commits=${COMMITS}" \
          "version-release=${VERSION}" \
          >> $GITHUB_OUTPUT

    - shell: bash
      if: ${{ steps.resolve_values.outputs.version-commits != '0' }}
      # language="shell script"
      run: |
        mvn --non-recursive git-versioner:commit-patch "-Dgv.commit.message=chore: [%k] release"

    - shell: bash
      env:
        TAG_PREFIX: ${{ inputs.tag-prefix }}
      # language="shell script"
      run: |
        mvn --non-recursive \
          "-Dtag.failWhenTagExist=true" \
          "-Dtag.messagePattern=Release version %v" \
          "-Dtag.namePattern=${TAG_PREFIX}%v" \
          git-versioner:tag

    - shell: bash
      env:
        DEPLOY_ACTOR: ${{ inputs.deploy-actor }}
        DEPLOY_TOKEN: ${{ inputs.deploy-token }}
        DEPLOY_SERVER: ${{ inputs.deploy-server }}
        GITHUB_ACTOR: ${{ inputs.github-actor }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        MAVEN_GPG_KEY: ${{ inputs.gpg-private-key }}
        MAVEN_GPG_PASSPHRASE: ${{ inputs.gpg-passphrase }}
        MAVEN_PROFILES: ${{ steps.resolve_values.outputs.profiles }}
        GITHUB_WORKSPACE: ${{ github.workspace }}
      # language="shell script"
      run: |
        echo "project.version=$(mvn help:evaluate -q -DforceStdout -Dexpression=project.version)"
        declare -a _args=( "-e"  "--batch-mode" "--no-transfer-progress" )
        _args+=( "-s" "${MAVEN_USER_SETTINGS}" )
        if [ -n "${MAVEN_PROFILES}" ]; then _args+=( "-P${MAVEN_PROFILES}" ) ; fi
        export GPG_TTY=$(tty) && mvn "${_args[@]}" deploy

    - shell: bash
      if: success()
      # language="shell script"
      run: |
        git push --follow-tags --atomic
