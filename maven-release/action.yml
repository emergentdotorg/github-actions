# action.yml
name: 'Maven Release'
description: 'Release your java application and publish artifacts to GitHub Packages'
branding:
  color: blue
  icon: unlock
inputs:

  java-version:
    description: 'The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file'
  java-distribution:
    description: 'Java distribution. See the list of supported distributions in README file'
    required: false
    default: 'temurin'

  maven-version:
    description: 'Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0'
    default: '3.9.9'

  #  server-id:
  #    description: 'ID of the distributionManagement repository in the pom.xml
  #       file. Default is `github`'
  #    required: false
  #    default: 'github'
  #  server-username:
  #    description: 'Environment variable name for the username for authentication
  #       to the Apache Maven repository. Default is $GITHUB_ACTOR'
  #    required: false
  #    default: 'GITHUB_ACTOR'
  #  server-password:
  #    description: 'Environment variable name for password or token for
  #       authentication to the Apache Maven repository. Default is $GITHUB_TOKEN'
  #    required: false
  #    default: 'GITHUB_TOKEN'

  git-release-bot-name:
    description: 'The git user name for commiting the release'
    required: false
    default: 'github-actions[bot]'
  git-release-bot-email:
    description: 'The git user email for commiting the release'
    required: false
    default: '41898282+github-actions[bot]@users.noreply.github.com'
  maven-release-plugin-version:
    description: 'Override the maven release plugin version'
    required: false
    default: ''
  maven-next-release-version:
    description: 'The release version string to assign to the next maven release build products.'
    required: false
    default: ''
  maven-next-snapshot-version:
    description: 'The snapshot version string to return the main branch to after performing a release.'
    required: false
    default: ''
  maven-scm-comment-prefix:
    description: 'The maven release scmCommentPrefix property value'
    default: '[GitHub] '
  maven-tag-name-format:
    description: 'The maven release tagNameFormat property value'
    default: ''
  maven-local-repo-path:
    description: 'The maven local repository path override'
    required: false
    default: ''
  maven-additional-arglist:
    description: 'Additional maven arguments delimited by newline to preserve spaces'
    required: false
    default: ''

  maven-settings-servers:
    description: 'servers definition in json array, eg: [{"id": "serverId", "username": "username", "password": "password"}]'
    required: false
  maven-settings-mirrors:
    description: 'mirrors definition in json array, eg: [{"id": "id", "name": "name", "mirrorOf": "mirrorOf", "url": "url"}]'
    required: false
  maven-settings-proxies:
    description: 'proxies definition in json array, eg: [{"id": "id", "active": "active", "protocol": "protocol", "host": "hostl", "port": "port", "nonProxyHosts", "nonProxyHosts"}]'
  maven-settings-properties:
    description: 'json array with properties, eg [{"propertyName1": "propertyValue1"}, {"propertyName2": "propertyValue2"}]'
    required: false
  maven-settings-githubServer:
    description: 'add to settings.xml servers server-id: github; username=$GITHUB_ACTOR and password=$GITHUB_TOKEN'
    default: "true"
    required: false
  maven-settings-repositories:
    description: 'list of custom repositories as json array, e.g: [{"id":"repoId","name":"repoName","url":"url","snapshots":{"enabled":true}}]'
    required: false

outputs:
  maven-scm-tag:
    description: "The release tag"
    value: ${{ steps.exec-maven-release.outputs.maven-scm-tag }}
  maven-release-version:
    description: "The release version that was built and tagged"
    value: ${{ steps.exec-maven-release.outputs.maven-release-version }}
  maven-development-version:
    description: "The latest version for development after release"
    value: ${{ steps.exec-maven-release.outputs.maven-development-version }}

runs:
  using: "composite"
  steps:

    - uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: ${{ inputs.java-distribution }}
        settings-path: ${{ github.workspace }}
        cache: maven

    - uses: stCarolas/setup-maven@v5
      with:
        maven-version: ${{ maven-version }}

    - uses: s4u/maven-settings-action@v3.0.0
      with:
        path: ${{ github.workspace }}/settings.xml
        servers: ${{ inputs.maven-settings-servers }}
        mirrors: ${{ inputs.maven-settings-mirrors }}
        proxies: ${{ inputs.maven-settings-proxies }}
        properties: ${{ inputs.maven-settings-properties }}
        githubServer: ${{ inputs.maven-settings-githubServer }}
        repositories: ${{ inputs.maven-settings-repositories }}

    - uses: actions/github-script@v7
      id: set-combined-opts
      with:
        result-encoding: string
        script: |
          let inputsObj = {
            "releaseVersion": "${{ inputs.maven-next-release-version }}",
            "developmentVersion": "${{ inputs.maven-next-snapshot-version}}",
            "tagNameFormat": "${{ inputs.maven-tag-name-format }}",
            "scmCommentPrefix": "${{ inputs.maven-scm-comment-prefix }}",
            "maven.repo.local": "${{ inputs.maven-local-repo-path }}"
          };
          let outputArr = [];
          for ([key, val] of Object.entries(inputsObj)) {
            if (val) {
              outputArr.push( `-D${key}=${val}` );
            }
          }
          return outputArr.join("\n");

    - shell: bash
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        exit 0
        echo "--- GITHUB_CONTEXT ---"
        echo "$GITHUB_CONTEXT"
        echo "--- ENVIRONMENT ---"
        env | sort

    - shell: bash
      id: exec-maven-release
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
        MAVEN_RELEASE_PLUGIN_VERSION: ${{ inputs.maven-release-plugin-version }}
      run: |        
        source $GITHUB_ACTION_PATH/utils-include-env.sh
        
        [ -z "$(git config --get user.name)" ] && git config --local user.name "${{ inputs.git-release-bot-name }}"
        [ -z "$(git config --get user.email)" ] && git config  --local user.email "${{ inputs.git-release-bot-email }}"

        readarray -t mvnArgsArr <<<"$(
          echo "${{steps.set-combined-opts.outputs.result}}" 
          echo "${{inputs.maven-additional-arglist}}" 
        )"
        mvnArgsArr+=( "-Dresume=false" )
        mvnArgsArr+=( "-DlocalCheckout=true" )
        mvnArgsArr+=( "-B" "--no-transfer-progress" )
        mvnArgsArr+=( "-s" "${GITHUB_WORKSPACE}/settings.xml" )

        execMvn "${mvnArgsArr[@]}" release:prepare
        readReleaseProperties
        execMvn "${mvnArgsArr[@]}" release:perform

        # if pushChanges=false we'd need the next line uncommented    
        #git push --follow-tags --atomic || failOnError
  
        echo "maven-scm-tag=${MAVEN_SCM_TAG:?}" >> ${GITHUB_OUTPUT}
        echo "maven-release-version=${MAVEN_RELEASE_VERSION:?}" >> ${GITHUB_OUTPUT}
        echo "maven-development-version=${MAVEN_DEVELOPMENT_VERSION:?}" >> ${GITHUB_OUTPUT}

